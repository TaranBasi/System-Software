/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ss_crswrk;

import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import ss_crswrk.client.chatClient;
import static ss_crswrk.window.currentUser;

/**
 *
 * @author Daniel
 */
public class chatWindow extends javax.swing.JFrame {

    static private String friend;
    static private String user;
    static private chatClient cc;
    
    
    
    /**
     * Creates new form chatWindow
     */
    public chatWindow(String str) throws InterruptedException {
        initComponents();
        
        System.out.println("str: " + str);
        
        String strArray[] = str.split("~");
        
        this.user = strArray[0];
        
        //Removing any * or (friend) from usernames
        String friendStr = strArray[1];
        
        friendStr = strArray[1].replaceAll("\\*", ""); 
        
        if (friendStr.indexOf("(") != -1) {
            friendStr = friendStr.substring(0, (strArray[1].indexOf("(") - 2));
        }
        
        

        
        this.friend = friendStr;
        
        chatNameLbl.setText("Chatting with: " + friend);
        
        establishConnection();
        
        listenForMessage();
        
        Thread.sleep(10);
         
        cc.sendMessage("add~" + user);
        
    }

    private chatWindow() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        chatNameLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messagesTxtArea = new javax.swing.JTextArea();
        sendMessageBtn = new javax.swing.JButton();
        composeMessageTxtFld = new javax.swing.JTextField();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        chatNameLbl.setText("jLabel1");

        messagesTxtArea.setEditable(false);
        messagesTxtArea.setColumns(20);
        messagesTxtArea.setRows(5);
        jScrollPane1.setViewportView(messagesTxtArea);

        sendMessageBtn.setText("Send");
        sendMessageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendMessageBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chatNameLbl)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(composeMessageTxtFld)
                        .addGap(18, 18, 18)
                        .addComponent(sendMessageBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chatNameLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendMessageBtn)
                    .addComponent(composeMessageTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        System.out.println("closing");
    }//GEN-LAST:event_formWindowClosing

    private void sendMessageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendMessageBtnActionPerformed
        
        String message = composeMessageTxtFld.getText();       
        
        messagesTxtArea.append(user + ": " + message + "\n");
        
        
        cc.sendMessage(user + "~" + friend + "~" + message);

    }//GEN-LAST:event_sendMessageBtnActionPerformed

        
    private void establishConnection() {
                
        try {
            client newClient = new client("chat");
            newClient.main();
            
            
            cc = newClient.getChatClient();
            
            System.out.println("adding");
            
            
        } catch (Exception ex) { }
        
    }
    
        
    
    private void listenForMessage() {
        
        java.util.Timer chatTimer = new Timer();
        
        chatTimer.scheduleAtFixedRate(new TimerTask() {
                @Override
                public void run() {
                                       
                    String str = cc.cl.chatMessage;
                    
                    String strArray[] = str.split("~");
                                        

                    if (!str.equals("")) {
                        if (strArray[0].equals(friend)) {
                            messagesTxtArea.append(friend + ": " + strArray[1] + "\n");
                            cc.cl.chatMessage = "";
                        }
                    }
                    
                }
            }, 1000, 1000); //First is delay before first execution, second is delay between each subsequent executions (3 seconds)
            
        
        
    }

    
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(chatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(chatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(chatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(chatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new chatWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel chatNameLbl;
    private javax.swing.JTextField composeMessageTxtFld;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea messagesTxtArea;
    private javax.swing.JButton sendMessageBtn;
    // End of variables declaration//GEN-END:variables
}
